let handler = async (m, { conn, args }) => {

    // Verifica si se proporciona un usuario

    if (!args.length) {

        return m.reply('ℹ️ *Por favor, menciona a un usuario para advertir.*\n\n*Ejemplo:* !advertir @usuario');

    }

    // Obtiene el ID del usuario mencionado

    const userId = m.mentionedJid[0]; // Usar el ID correcto del usuario mencionado

    // Inicializa la advertencia para el usuario si no existe

    if (!global.warn) global.warn = {};

    if (!global.warn[userId]) global.warn[userId] = 0;

    // Incrementa el contador de advertencias

    global.warn[userId] += 1;

    // Verifica si el usuario ha alcanzado el límite de advertencias

    if (global.warn[userId] >= 3) {

        // Elimina al usuario del grupo

        await conn.groupParticipants(m.chat, [userId], 'remove');

        delete global.warn[userId]; // Resetea las advertencias del usuario

        return m.reply(`❌ *${userId} ha sido eliminado del grupo tras 3 advertencias.*`);

    }

    // Envía un mensaje de advertencia

    await m.reply(`⚠️ *Advertencia #${global.warn[userId]} para @${userId}.*\n\n*Total de advertencias: ${global.warn[userId]}*`, null, {

        contextInfo: { mentionedJid: [userId] }

    });

};

// Definición del comando y handler

handler.command = /^(advertir|warn)$/i; // Comandos que activan el plugin

handler.admin = true; // Solo administradores pueden usar este comando

handler.tag = ['fin']; // Handler con tag

handler.group = true; // Puede usarse en grupos

export default handler;